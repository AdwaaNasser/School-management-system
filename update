مسوده

package helloall;

import java.util.Scanner;
import javax.swing.JOptionPane;

public abstract class Employee extends Member {
    protected double salary;
    protected int absensDays;
    protected int yearsOfwork;
    Scanner input = new Scanner(System.in);

    public Employee(String firstName, String lastName, String email, double salary, int yearsOfwork, int absensDays) {
        super(firstName, lastName, email);

        // Validate inputs and throw an exception if invalid
        if (!setSalary(salary)) {
            throw new IllegalArgumentException("Invalid salary! Employee cannot be added.");
        }
        if (!setAbsensDays(absensDays)) {
            throw new IllegalArgumentException("Invalid absence days! Employee cannot be added.");
        }
        if (!setYearsOfwork(yearsOfwork)) {
            throw new IllegalArgumentException("Invalid years of work! Employee cannot be added.");
        }

        JOptionPane.showMessageDialog(null, "Employee added successfully!");
    }

    public abstract String bonus();

    public abstract String calculateSalay();

    // Methods to check invalid input
    public boolean setSalary(double salary) {
        try {
            if (salary <= 0) {
                throw new UnmatchedRangeException();
            } else {
                this.salary = salary;
                return true;
            }
        } catch (UnmatchedRangeException e) {
            JOptionPane.showMessageDialog(null, "Invalid salary! Employee cannot be added.");
            return false;
        }
    }

    public boolean setAbsensDays(int absensDays) {
        try {
            if (absensDays < 0 || absensDays > 300) {
                throw new UnmatchedRangeException();
            } else {
                this.absensDays = absensDays;
                return true;
            }
        } catch (UnmatchedRangeException e) {
            JOptionPane.showMessageDialog(null, "Invalid absence days! Employee cannot be added.");
            return false;
        }
    }

    public boolean setYearsOfwork(int yearsOfwork) {
        try {
            if (yearsOfwork < 0 || yearsOfwork > 45) {
                throw new UnmatchedRangeException();
            } else {
                this.yearsOfwork = yearsOfwork;
                return true;
            }
        } catch (UnmatchedRangeException e) {
            JOptionPane.showMessageDialog(null, "Invalid years of work! Employee cannot be added.");
            return false;
        }
    }
}











//add course

 String name =jTextField3.getText().trim();
        String code =jTextField8.getText().trim();
        String size =jTextField9.getText().trim();
         String first =jTextField10.getText().trim();
        String last =jTextField11.getText().trim();
        String email =jTextField12.getText().trim();
        String salaryText = jTextField13.getText().trim();
    String yearsText = jTextField15.getText().trim();
    String absensDaysText = jTextField14.getText().trim();
 
        int size1 = Integer.parseInt(size); 
         double salary = Double.parseDouble(salaryText);  // Ensure salary is a number
        int yearsOfwork = Integer.parseInt(yearsText);   // Ensure years of work is a number
        int absensDays = Integer.parseInt(absensDaysText);
      course = new Course (name, code, size1, first,  last,  email, salary,yearsOfwork, absensDays)  ; 










//buttun do


if(jRadioButton1.isSelected()== true){
             String firstName =jTextField16.getText().trim();
            course.deleteStudent(firstName);
        }
        if(jRadioButton2.isSelected()== true){
             String firstName =jTextField16.getText().trim();
            course.SearchForStudent(firstName);
                   
        }
        if(jRadioButton3.isSelected()== true){
             String firstName =jTextField16.getText().trim();
              String lastName =jTextField17.getText().trim();
               String email =jTextField18.getText().trim();
            course.addStudent(firstName,lastName,email);
        }

//display studnt
  Course test =  course;
         if(test == null){
            jTextArea2.setText("there is nothing to display") ;
            return; }
         else {
              jTextArea2.setText("");
              for(int i =0; i<test.student.length; i++){
                  if(test.student[i]!=null)
                   jTextArea2.append(test.student[i].toString());
                  jTextArea2.append("\n");
              }
         }





//data member
Assistant assistant;

// add button
 double salary = Double.parseDouble(salaryText);  // Ensure salary is a number
        int yearsOfwork = Integer.parseInt(yearsText);   // Ensure years of work is a number
        int absensDays = Integer.parseInt(absensDaysText);
            
      
        
            assistant = new Assistant(firstName, lastName, email, salary,yearsOfwork,absensDays);
           
           jTextField1.setText("");
   jTextField2.setText("");
   jTextField4.setText("");
   jTextField5.setText("");
   jTextField6.setText("");
   jTextField7.setText("");

 //display button
  Assistant test =  assistant;
         if(test == null){
            jTextArea1.setText("there is no assistant found") ;
            return; }
         else {
              jTextArea1.setText("");
              jTextArea1.append(test.bonus());
              jTextArea1.append("\n");
              jTextArea1.append(test.calculateSalay());
         }
